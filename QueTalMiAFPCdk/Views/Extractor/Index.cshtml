@using QueTalMiAFPCdk.Models.Others
@using System.Globalization
@model IEnumerable<Log>
@{
    ViewData["Title"] = "Actualizar Valores Registrados";
}

@section Head {
    <meta name="robots" content="noindex">
    <meta name="description" content="Aquí podrás solicitar la actualización de nuestra base de datos,
          lo que extraerá los valores cuotas provenientes de las distintas AFP,
          según la información que ellas presentan es sus propias páginas webs." />
}

@section Scripts {
    <script src="~/js/Extractor.js" asp-append-version="true"></script>
}

<form method="post" class="conCargando">
    <h1>@ViewData["Title"]</h1>
    <p class="text-muted">
        Aquí podrás solicitar la actualización de nuestra base de datos,
        lo que extraerá los valores cuotas provenientes de las distintas AFP,
        según la información que ellas presentan es sus propias páginas webs.
    </p>
    <p class="text-muted">Este proceso consulta las siguientes APIs al momento de solicitar la extracción:</p>
    <table style="margin-top: 20px; margin-bottom: 20px; table-layout:fixed; width:100%;">
        <tr>
            <td style="width:9.5em;"><b>AFP Capital:</b></td>
            <td style="word-break:break-all;">https://www.afpcapital.cl/_vti_bin/ValorCuota/ValorCuotaWCF.svc/ObtenerDataComparacion</td>
        </tr>
        <tr>
            <td><b>AFP Cuprum:</b></td>
            <td style="word-break:break-all;">https://www.cuprum.cl/ApiSitioPublico/SeriesValorCuota/ValorCuota</td>
        </tr>
        <tr>
            <td><b>AFP Habitat:</b></td>
            <td style="word-break:break-all;">https://www.afphabitat.cl/wp-admin/admin-ajax.php?action=ajax_call&funcion=getCalculoValorCuota</td>
        </tr>
        <tr>
            <td><b>AFP Modelo:</b></td>
            <td style="word-break:break-all;">https://nzoth-v8.afpmodelo.net/publico/wsAFPParametros/wmValoresCuotaAFP</td>
        </tr>
        <tr>
            <td><b>AFP PlanVital:</b></td>
            <td style="word-break:break-all;">https://api2.planvital.cl/public/financial-indicators/quota-values</td>
        </tr>
        <tr>
            <td><b>AFP ProVida:</b></td>
            <td style="word-break:break-all;">https://www.provida.cl/aps/providacl/proxy/wsqval/wsqval.asmx?wsdl</td>
        </tr>
        <tr>
            <td><b>AFP Uno:</b></td>
            <td style="word-break:break-all;">https://www.uno.cl/api/valor-cuota-buscar/historico</td>
        </tr>
        <tr>
            <td><b>Valor UF:</b></td>
            <td style="word-break:break-all;">https://mindicador.cl/api/uf</td>
        </tr>
        <tr>
            <td><b>Comisiones CCO:</b></td>
            <td style="word-break:break-all;">https://www.spensiones.cl/apps/estcom/estcom.php</td>
        </tr>
        <tr>
            <td><b>Comisiones CAV:</b></td>
            <td style="word-break:break-all;">https://www.spensiones.cl/apps/comisiones/getComisAV.php</td>
        </tr>
    </table>
    <p class="text-muted">A continuación selecciona el tipo de extracción que deseas efectuar:</p>

    <div style="display: grid; grid-template-columns: auto auto" class="mb-3">
        <div class="pr-3">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="tipoExtraccion" id="tipoExtraccion1" value="1">
                <label class="form-check-label ml-3" for="tipoExtraccion1">
                    <b>Extracción Completa:</b> Se obtienen todos los datos registrados desde el 01/08/2002.
                </label>
            </div>
            <div class="form-check mt-2">
                <input class="form-check-input" type="radio" name="tipoExtraccion" id="tipoExtraccion2" value="2">
                <label class="form-check-label ml-3" for="tipoExtraccion2">
                    <b>Extracción Último Año:</b> Se obtienen los datos registrados desde el
                    @DateTime.Now.ToUniversalTime().Date.AddYears(-1).ToString("dd/MM/yyyy", CultureInfo.InvariantCulture) al
                    @DateTime.Now.ToUniversalTime().Date.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture).
                </label>
            </div>
            <div class="form-check mt-2">
                <input class="form-check-input" type="radio" name="tipoExtraccion" id="tipoExtraccion3" value="3">
                <label class="form-check-label ml-3" for="tipoExtraccion3">
                    <b>Extracción Último Mes:</b> Se obtienen los datos registrados desde el
                    @DateTime.Now.ToUniversalTime().Date.AddMonths(-1).ToString("dd/MM/yyyy", CultureInfo.InvariantCulture) al
                    @DateTime.Now.ToUniversalTime().Date.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture).
                </label>
            </div>
            <div class="form-check mt-2">
                <input class="form-check-input" type="radio" name="tipoExtraccion" id="tipoExtraccion4" value="4" checked>
                <label class="form-check-label ml-3" for="tipoExtraccion4">
                    <b>Extracción Última Semana:</b> Se obtienen los datos registrados desde el
                    @DateTime.Now.ToUniversalTime().Date.AddDays(-7).ToString("dd/MM/yyyy", CultureInfo.InvariantCulture) al
                    @DateTime.Now.ToUniversalTime().Date.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture).
                </label>
            </div>
        </div>
        <div class="my-auto">
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text" for="llaveExtraccion">Llave</span>
                </div>
                <input type="password" class="form-control" name="llaveExtraccion" id="llaveExtraccion" required />
            </div>
            <button type="submit" class="btn btn-primary w-100">
                <div style="display: grid; grid-template-columns: auto auto auto">
                    <div class="ml-auto mr-1">
                        <span style="display:none;" class="position-relative spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    </div>
                    <div class="text-center">Extraer Datos</div>
                </div>
            </button>
        </div>
    </div>
    @if (Model != null) {
        <h4 class="p-2 m-0 logs mt-3" style="width:100%; text-align:center; border:1px solid #dee2e6;">Historial del Proceso de Extracción</h4>
        <div class="logs mb-3" style="width:100%; max-height:30em; overflow:auto;">
            <table style="table-layout:fixed; width:100%;" class="table table-bordered m-0">
                @for (int i = 0; i < Model.Count(); i++) {
                    Log log = Model.ElementAt(i);
                    Log? logSiguiente = null;
                    if (i + 1 < Model.Count()) {
                        logSiguiente = Model.ElementAt(i + 1);
                    }
                    <tr>
                        <th class="@(logSiguiente != null && logSiguiente.Tipo == 1 ? "bb-more-danger" : "") @(log.Tipo == 1 ? "text-light bg-danger b-more-danger" : "")" style="width:3em; text-align:center;">
                            @(Model.Count() - i)
                        </th>
                        <td class="@(logSiguiente != null && logSiguiente.Tipo == 1 ? "bb-more-danger" : "") @(log.Tipo == 1 ? "text-light bg-danger b-more-danger" : "")" style="width: 30%; text-align:center;">
                            <div>@log.Fecha.ToString("dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture)</div>
                        </td>
                        <td class="@(logSiguiente != null && logSiguiente.Tipo == 1 ? "bb-more-danger" : "") @(log.Tipo == 1 ? "b-more-danger" : "")">@log.Mensaje</td>
                    </tr>
                }
            </table>
        </div>
    }
</form>

